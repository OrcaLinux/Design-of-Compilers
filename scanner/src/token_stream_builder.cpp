/**
 * @file TokenStreamBuilder.cpp
 * @brief Implements the TokenStreamBuilder class for orchestrating the tokenization process.
 *
 * The TokenStreamBuilder class handles tokenization by utilizing the Scanner
 * to generate tokens and stores them in a vector for further processing.
 */

#include "token_stream_builder.hpp"

namespace TINY::SCANNER
{

    // Constructor initializes the TokenStreamBuilder with a reference to the Scanner object.
    TokenStreamBuilder::TokenStreamBuilder(Scanner &scanner) : scanner(scanner)
    {
    }

    // Processes the input source code using the Scanner and generates tokens.
    void TokenStreamBuilder::build()
    {
        tokens.clear(); // Clear any existing tokens in the vector
        while (scanner.hasMoreTokens())
        {
            tokens.push_back(scanner.getNextToken()); // Append the next token to the vector
        }
    }

    // Returns a constant reference to the vector of tokens generated by the Scanner.
    const std::vector<Token> &TokenStreamBuilder::getTokens() const
    {
        return tokens; // Provide read-only access to the tokens
    }

} // namespace TINY::SCANNER
